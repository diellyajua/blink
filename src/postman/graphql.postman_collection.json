{
	"info": {
		"_postman_id": "845c604c-7253-4f9d-acec-2693ef28be20",
		"name": "graphql",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "notoken",
			"item": [
				{
					"name": "queries",
					"item": [
						{
							"name": "prices",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query prices {\n    prices {\n        id\n        o\n    }\n}",
										"variables": "{}"
									},
									"options": {
										"graphql": {}
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "buildParameters",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query buildParameters {\n    buildParameters {\n        commitHash\n        buildTime\n    }\n}",
										"variables": "{}"
									},
									"options": {
										"graphql": {}
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "earnList",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query earnList {\n    earnList {\n        id\n        value\n        completed\n    }\n}",
										"variables": "{}"
									},
									"options": {
										"graphql": {}
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "mutations",
					"item": [
						{
							"name": "requestPhoneCode",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "db3fd5b3-98cc-471b-a24b-ded81b695363",
										"exec": [
											"pm.test(\"requesting a code\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.data.requestPhoneCode.success).to.eql(true);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation requestPhoneCode ($phone: String) {\n    requestPhoneCode (phone: $phone) {\n        success\n    }\n}",
										"variables": "{\n  \"phone\": \"{{phone}}\"\n}"
									},
									"options": {
										"graphql": {}
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "login",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a9b5872b-59c5-438d-a8e4-7b1e04f4856e",
										"exec": [
											"pm.test(\"requesting a token\", function () {",
											"    const jsonData = pm.response.json();",
											"    const token = jsonData.data.login.token",
											"    // token should have two dot \".\"",
											"    const parts = token.split(\".\")",
											"    pm.expect(parts.length).to.eql(3);",
											"    pm.environment.set(\"token\", token)",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation login ($phone: String, $code: Int) {\n    login (phone: $phone, code: $code) {\n        token\n    }\n}",
										"variables": "{\n  \"phone\": \"{{phone}}\",\n  \"code\": {{code}}\n}"
									},
									"options": {
										"graphql": {}
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "token",
			"item": [
				{
					"name": "queries",
					"item": [
						{
							"name": "wallet",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query wallet {\n    wallet {\n        id\n        currency\n        balance\n        transactions {\n            id\n            amount\n            description\n            created_at\n            hash\n            type\n        }\n    }\n}",
										"variables": "{}"
									},
									"options": {
										"graphql": {}
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "earnList",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query earnList {\n    earnList {\n        id\n        value\n        completed\n    }\n}",
										"variables": "{}"
									},
									"options": {
										"graphql": {}
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "me",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query me {\n    me {\n        id\n        name\n        level\n    }\n}",
										"variables": "{}"
									},
									"options": {
										"graphql": {}
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				},
				{
					"name": "mutations",
					"item": [
						{
							"name": "openChannel",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation openChannel ($local_tokens: Int, $public_key: String, $socket: String) {\n    openChannel (local_tokens: $local_tokens, public_key: $public_key, socket: $socket) {\n        tx\n    }\n}",
										"variables": "{\n  \"local_tokens\": 0,\n  \"public_key\": \"\",\n  \"socket\": \"\"\n}"
									},
									"options": {
										"graphql": {}
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "onchain",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation onchain {\n    onchain {\n        getNewAddress\n    }\n}",
										"variables": "{}"
									},
									"options": {
										"graphql": {}
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "invoice",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation invoice ($value: Int, $memo: String, $hash: String, $invoice: String) {\n    invoice {\n        addInvoice (value: $value, memo: $memo)\n        updatePendingInvoice (hash: $hash)\n        payInvoice (invoice: $invoice)\n    }\n}",
										"variables": "{\n  \"value\": 0,\n  \"memo\": \"\",\n  \"hash\": \"\",\n  \"invoice\": \"\"\n}"
									},
									"options": {
										"graphql": {}
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "earnCompleted",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation earnCompleted ($ids: [ID]) {\n    earnCompleted (ids: $ids) {\n        id\n        value\n        completed\n    }\n}",
										"variables": "{\n  \"ids\": [\n    0\n  ]\n}"
									},
									"options": {
										"graphql": {}
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "updateUser",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation updateUser ($user: InputUser) {\n    updateUser (user: $user) {\n        id\n        name\n        level\n    }\n}",
										"variables": "{\n  \"user\": {\n    \"id\": 0,\n    \"level\": 0,\n    \"deviceToken\": \"\"\n  }\n}"
									},
									"options": {
										"graphql": {}
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteUser",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation deleteUser {\n    deleteUser\n}",
										"variables": "{}"
									},
									"options": {
										"graphql": {}
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						}
					],
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "ada6e3a7-2871-48cd-a6d1-1dc81304b38a",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "4b390398-4e3f-404f-9b2c-fd3caa54a296",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					],
					"protocolProfileBehavior": {},
					"_postman_isSubFolder": true
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "92636d72-e28c-4500-b62c-5b48c304e369",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "de689ea0-2651-4a1f-8767-a3bc2b072635",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "b749a65a-05f0-4920-a1ef-9e6ee9e30a3d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "a8b6c263-6000-4ecc-89a2-6218e866b155",
				"type": "text/javascript",
				"exec": [
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});"
				]
			}
		}
	],
	"protocolProfileBehavior": {}
}