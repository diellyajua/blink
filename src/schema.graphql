type Transaction {
  id: ID!
  amount: Int!,
  description: String!,
  created_at: String!,
  hash: String,
  type: String!,
}

type Price {
  id: ID!
  o: Float
}

type Earn {
  """
  the earn reward for the app to display their associated amount
  """
  id: ID!
  value: Int
}

type Wallet {
  id: ID
  currency: String # enum?
  balance: Int
  transactions: [Transaction]
}

type Invoice {
  addInvoice(value: Int, memo: String): String
  updatePendingInvoice(hash: String): Boolean
  payInvoice(invoice: String): String
}

type User {
  id: ID
  name: String!
  level: Int!
}

input InputUser {
  id: ID
  level: Int
}

type Query {  
  prices: [Price]
  wallet(uid: String): [Wallet]
  earnList: [Earn]
  me(uid: String): User
}

type Mutation {
  invoice(uid: String): Invoice
  addEarn(earn: [ID]): Boolean
  updateUser(user: InputUser): User
}
