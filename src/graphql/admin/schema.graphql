type Query {
  allLevels: [AccountLevel!]!
  userDetailsByPhone(phone: Phone!): UserDetails!
  userDetailsByUsername(username: Username!): UserDetails!
}

enum AccountLevel {
  ONE
  TWO
}

type UserDetails {
  id: ID!
  username: Username
  phone: Phone!
  level: AccountLevel
  createdAt: Date!
}

scalar Username

scalar Phone

scalar Date

type Mutation {
  requestPhoneCode(phone: String!): Boolean
  login(phone: String!, code: String!): String
  userUpdateStatus(input: UserUpdateStatusInput!): UserDetailPayload!
  userUpdateLevel(input: UserUpdateLevelInput!): UserDetailPayload!
  merchantUpdateMapInfo(input: MerchanUpdateMapInfoInput!): UserDetailPayload!
}

type UserDetailPayload {
  errors: [UserError!]!
  userDetails: UserDetails
}

type UserError {
  message: String!
  fields: [String!]!
}

input UserUpdateStatusInput {
  uid: ID!
  status: AccountStatus!
}

enum AccountStatus {
  LOCKED
  ACTIVE
}

input UserUpdateLevelInput {
  uid: ID!
  level: AccountLevel!
}

input MerchanUpdateMapInfoInput {
  username: Username!
  title: String!
  longitude: Float!
  latitude: Float!
}
